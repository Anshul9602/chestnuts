<script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"> </script>
<script
  src="https://cdn.jsdelivr.net/npm/@splidejs/splide-extension-auto-scroll@0.5.3/dist/js/splide-extension-auto-scroll.min.js"> </script>

<link href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css" rel="stylesheet" />

{% style %}
.blockquote {
border: none;
}
.show {display: block;}
.product-title {
font-size: 22px;
text-transform: uppercase;
}
.total-price {
font-size: 18px !important;
}

.slick-slide {
height: auto !important;
}

.listItemHeight {
height: 196px;
}

.product-detial .slider .slick-slider li {
width: 25% !important;
}
@media (max-width: 768px) {
.grid {
display:grid !important;
text-iteam:center;
}
.dataprice{
width:100% !important;
display: flex;
justify-content: center;

}
}
.slider-sec .slick-track {
left: auto !important;
}

.size-option label {
font-weight: 500;
cursor: pointer;
}

.size-option input:checked + label {
color: #c99035;
font-size: 20px;
}
.product_thumbnails1 .splide__arrows{
top:20px;
margin:auto;
right: 0px;
width:100%;
}
.thum1 img{
cursor:pointer;
}
.product-image img{
cursor:pointer;
}
.hidden {
display: none;
}
#AddToCart:hover{
Color:#894e3f !important;
background-color:#f0d7a7 !important;
border: 1px solid #f0d7a7;
}
#Buynow:hover{
Color:#894e3f !important;
background-color:#f0d7a7 !important;
border: 1px solid #f0d7a7;
}
.line-through {
text-decoration-line: line-through;
}
.splide__list .is-active{
height:auto !important;
}
.clrs-options input + label {
border: 1px solid #c99035;
color: #c99035;
cursor: pointer !important;
}

.clrs-options input:checked + label {
border-color: #c99035;
color: white;
background-color: #c99035;
}


/* Add some basic styling to the carousels */
.splide {
/* Adjust the width as needed */
margin: 20px auto;
}

/* Style for both thumbnail and main carousels */
.splide__slide {
overflow: hidden;
border-radius: 8px; /* Optional: Add rounded corners */
}

/* Style for thumbnail images */
#thumbnail-carousel .splide__slide img {
width: 100%;

object-fit: cover;
}

/* Style for active slide in thumbnail carousel */
#thumbnail-carousel .splide__slide.is-active {
border: 2px solid #3498db; /* Change border color as needed */
opacity: 1;
}

/* Style for main carousel images */
#main-carousel .splide__slide img {
width: 100%;
height: auto;
}
.run .splide__arrows{
display: none;
}
.dataprice::-webkit-scrollbar {
    width: 0.5em !important;
}
.dataprice::-webkit-scrollbar-thumb {
    background-color: transparent !important;
}

/* Optional: You can also hide the track if you want */
.dataprice::-webkit-scrollbar-track {
    background-color: transparent !important;
}
{% endstyle %}

{% assign sectionId = section.id %}

{% for collection in product.collections %}
{%- assign strings = collection.url | split: '/' -%}
{% if forloop.index == 1 %}
{% for word in strings %}
{% if forloop.index == 3 %}
{% assign currentProductCollection = word %}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
<div class="contanier mt-0 mt-md-5">
  <div class="product_section row m-0" style="display:flex;">


    <!-- Main Carousel -->

    <div class="product_imgs col-md-7 row m-0 pl-md-5 pr-md-5 p-0 " style="    justify-content: space-around;     height: 80vh;   ">
      <section id="main-carousel" class="splide" style="height: fit-content;">
        <div class="splide__track">
          <ul class="splide__list">
            {% for image in product.images %}
            <li class="splide__slide" style="justify-content: center;display:flex;"><img
                src="{{ image.src | img_url: '400x400' }}" alt="" style="max-width: 350px;"></li>
            {% endfor %}
          </ul>
        </div>
      </section>
      <section id="thumbnail-carousel" class="splide"
        style="    max-width: 70%;    display: flex;    justify-content: center;    height: 150px;">
        <div class="splide__track" style="width: 100%;">
          <ul class="splide__list" style="width: 100%;    justify-content: center;">
            {% for image in product.images %}


            <li class="splide__slide" style="
            max-width:150px;border-radius: 50%;"><img src="{{ image.src | img_url: '200x200' }}" alt="" height="100">
            </li>
            {% endfor %}
          </ul>
        </div>
      </section>
    </div>
    <div class="dataprice col-md-5" style="height: 80vh;    overflow-y: scroll;">
      <div class="product_info " style="min-width:270px;">
        <div class="flex flex-col gap-y-3">
          <div class="product-title">
            <h1 class="text-[30px] font-Mukta font-semibold">{{ product.title }}</h1>
            <span id="" class="rc">
              <a href="#reviews">
                <div
                  style="padding:0px 5px 0px;color: #FFFFFF;  display:inline-block;font-size: 12px;background-color:#c37960">
                  <span class="productRatingEvnt" style="vertical-align: middle;">4.7</span>
                  <span style="vertical-align: middle;">â˜…</span>
                </div>
                <span style="color: #878787; font-size:13px;">Rating &amp; 3 Reviews</span>
              </a></span>
          </div>
          <hr>
          <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm">
            <div class="product-prices flex flex-row items-center gap-x-4 mt-3">
              <span class="product_price  font-Mukta text-[23px] font-bold"
                style="font-size: 18px;opacity: 1;position: relative;">{{
                product.selected_or_first_available_variant.price | money }}</span>
              <span
                class="product_compare_price   text-gray-500 font-Mukta line-through {% if product.selected_or_first_available_variant.price == product.selected_or_first_available_variant.compare_at_price %}hidden{% endif %}">{{
                product.selected_or_first_available_variant.compare_at_price | money }}</span>
              <span
                class="sale-tag {% if product.selected_or_first_available_variant.compare_at_price %}not-hidden{% else %}hidden{% endif %}">
                {% if product.selected_or_first_available_variant.compare_at_price %}
                <span class='relative text-white flex flex-row'>
                  <span class="sale_percent bg-primary py-[2px] px-[10px] text-[12px] ml-[-6px] font-Mukta"
                    style="padding:5px;">
                    {{ product.selected_or_first_available_variant.compare_at_price | minus:
                    product.selected_or_first_available_variant.price | times: 100 | divided_by:
                    product.selected_or_first_available_variant.compare_at_price }}%
                    OFF
                  </span>
                </span>
                {% endif %}
              </span>
            </div>

            <select name="id" id="productSelect" class="mt-3"
              style="margin-top:10px;margin-bottom:10px;width: 50%;border: 2px solid;padding: 10px;border-radius: 10px;">
              {% for variant in product.variants %}
              {% if variant.available %}
              <option value="{{ variant.id }}">
                {{ variant.title }} - {{ variant.price | money_with_currency }}
              </option>
              {% else %}
              <option disabled="disabled">
                {{ variant.title }} - sold out
              </option>
              {% endif %}
              {% endfor %}
            </select>

            <div class="product-quantity flex flex-col gap-y-1 mb-1" style="margin-top:20px;margin-bottom:20px;">
              <label for="Quantity" class="font-Mukta text-[#5b5b5b] font-bold">Quantity</label>
              <div class="quantity-wrapper inline-block relativ overflow-visible bg-white text-black"
                style="padding-top: 10px;">
                <input type="number" id="Quantity" name="quantity" value="1" min="1"
                  style="    border: 1px solid;border-radius: 10px;text-align: center;    padding: 5px;    width: 90px;">
              </div>
            </div>
            <div class="row">
              <div class="addToCart-btn col-md-5 items-start mt-3">
                <div class="add-cart ">
                  <button type="submit" id="AddToCart" name="add"
                    class="border w-full  py-3 rounded-[4px] bg-primary  transition-all text-white tracking-[3px] font-semibold uppercase font-Mukta"
                    style="border-radius: 10px;">
                    Add to cart
                  </button>

                </div>

              </div>
              <div class="col-md-5 mt-3">
                <a id="Buynow"
                  class="border btn w-full  py-3 rounded-[4px]  transition-all  tracking-[3px] font-semibold uppercase font-Mukta"
                  style="border-radius: 10px;color:#894e3f;border:1px solid #894e3f;padding:16px 0;width:100%;">
                  Buy Now
                </a>
              </div>
            </div>

        </div>
        </form>
        <hr>
        <style>
          .tab {
            overflow: hidden;
            font-weight: 600;

          }

          /* Style the buttons inside the tab */
          .tab button {
            border-bottom: 2px solid #f0d7a7;
            float: left;

            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
            font-size: 17px;
            width: 33.33%;
          }

          /* Change background color of buttons on hover */
          .tab button:hover {
            border-bottom: 2px solid #894e3f;
          }

          /* Create an active/current tablink class */
          .tab button.active {
            border-bottom: 3px solid #894e3f;
          }

          /* Style the tab content */
          .tabcontent {
            display: none;
            padding: 6px 12px;

            border-top: none;
          }
        </style>
        <div class="product-ratings"></div>
        <div class="info_container mt-10">
          <div class="product-description " style="margin-top:20px;">

            <div class="tab">
              <button class="tablinks active" onclick="openCity(event, 'London')">Description</button>
              <button class="tablinks" onclick="openCity(event, 'Paris')">Product Info</button>
              <button class="tablinks" onclick="openCity(event, 'Tokyo')">More Info</button>
            </div>


            <div id="London" class="tabcontent" style="display:block;">
              <p class="font-Mukta mt-4">{{ product.description }}</p>

            </div>

            <div id="Paris" class="tabcontent">
              {% if product.sku %}
              <h5>SKU : <span>{{ product.sku }}</span></h5>
              {% endif %}
              {% if product.metafields.custom.constituents_ %}
              <h5 class="mt-4">Constituents </h5>
              <div class="p-3">
                <p>{{ product.metafields.custom.constituents_ }}</p>
              </div>
              {% endif %}
              {% if product.metafields.custom.specifications %}
              <h5 class="mt-4">Specifications </h5>
              <div class="p-3">
                <p>{{ product.metafields.custom.specifications }}</p>
              </div>
              {% endif %}
            </div>

            <div id="Tokyo" class="tabcontent">
              {% if product.metafields.custom.specifications %}
              <h5 class="mt-4">Delivery Info</h5>
              <div class="p-3">
                <p>{{ product.metafields.custom.delivery_info }}</p>
              </div>
              {% endif %}
            </div>

          </div>

        </div>
        <hr>
        <div class="row" style="margin:20 auto;padding-left:4px;">
          <div class="col-md-3 " style="padding:0;justify-content: center;display: flex;align-items: center;">
            <input type="hidden" id="totalRevwCunt" value="3">
            <div class="left" style="margin-top:12%;">
              <div class="94">
                <div style="font-size:36px;font-weight: 600; align-content: center;color: #4D4D4D;">4.7<strong
                    class="left-rating-star" style="color: #c37960;font-size: 31px">â˜…</strong></div>
              </div>
              <div style="margin-top:-6px;font-size: 13px;line-height:18px;">Rating &amp; 3 reviews</div>
            </div>
          </div>
          <div class="left col-md-9 " style="padding:0">
            <div class=" rating-review-on-cat" style="padding-left:3%;">
              <div class="clearfix"></div>
              <div class="rationg d-flex mt-4">
                <span class="left" style="color:#666666;font-size: 13px">5 <strong>â˜…</strong></span>
                <span class="progress left" style="width:55%; margin-left: 10px; margin-bottom: 0;border-radius: 10px;">
                  <div class="determinate" style="background-color:#c37960!important; width: 66.66666666666667%"></div>
                </span>
                <span class="left" style="font-size: 13px;color:#707070;margin-left:10px;">2</span>
              </div>
              <div class="clearfix"></div>
              <div class="d-flex mt-2">
                <span class="left" style="color:#666666;;font-size: 13px">4 <strong>â˜…</strong></span>
                <span class="progress left" style="width:55%; margin-left: 10px; margin-bottom: 0;border-radius: 10px;">
                  <div class="determinate" style=" background-color:#c37960!important;width: 33.333333333333336%"></div>
                </span>
                <span class="left" style="font-size: 13px;color:#707070;margin-left:10px;">1</span>
              </div>
              <div class="clearfix"></div>
              <div class="d-flex mt-2">
                <span class="left" style="color:#666666;font-size: 13px">3 <strong>â˜…</strong></span>
                <span class="progress left" style="width:55%; margin-left: 10px; margin-bottom: 0;border-radius: 10px;">
                  <div class="determinate" style="background-color:#c37960!important;width: 0.0%"></div>
                </span>
                <span class="left" style="font-size: 13px;color:#707070;margin-left:10px;">0</span>
              </div>
              <div class="clearfix"></div>
              <div class="d-flex mt-2">
                <span class="left" style="color:#666666;font-size: 13px">2 <strong>â˜…</strong></span>
                <span class="progress left" style="width:55%; margin-left: 10px; margin-bottom: 0;border-radius: 10px;">
                  <div class="determinate" style=" background-color: #ffa500!important;width: 0.0%"></div>
                </span>
                <span class="left" style="font-size: 13px;color:#707070;margin-left:10px;">0</span>
              </div>
              <div class="clearfix"></div>
              <div class="d-flex mt-2">
                <span class="left" style="color:#666666;font-size: 13px">1 <strong>â˜…</strong></span>
                <span class="progress left" style="width:55%; margin-left: 10px; margin-bottom: 0;border-radius: 10px;">
                  <div class="determinate" style="background-color: #e95757!important; width: 0.0%"></div>
                </span>
                <span class="left" style="font-size: 13px;color:#707070;margin-left:10px;">0</span>
              </div>
              <div class="clearfix"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <hr>

  <section class="splide run pt-4 pb-4" aria-label="Splide Basic HTML Example" style="background: antiquewhite;">
    <div class="splide__track">
      <ul class="splide__list">

        <li class="splide__slide text-center">
          <h6>100% Veg</h6>
        </li>
        <li class="splide__slide  text-center">
          <h6>100% Eggless</h6>
        </li>

      </ul>
    </div>
  </section>
  <!-- slider-section of the page -->
  <br /><br />
  <div class="px-5">
    <div class="row">
      <div class="col-12 text-center">
        <div class="product-title">
          <h1 class="text-[30px] font-Mukta font-semibold">You May Also Like</h1>
          <hr>
        </div>
        </br></br>
      </div>
    </div>
  </div>

  <div class="container">
    <div class="px-5 relative">
      <div class="row pm1">
        <div class="col-12">
          <section class="splide" id="relatedSlider" aria-label="Splide Basic HTML Example">
            <div class="splide__track">
              <ul class="splide__list">
                {% paginate collections[currentProductCollection].products by 4 %}
                {% for product in collections[currentProductCollection].products %}
                <li class="splide__slide">
                  {% render 'Bespoke-card', product: product %}
                </li>
                {% endfor %}
                {% endpaginate %}
              </ul>
            </div>
          </section>
        </div>
      </div>
    </div>
  </div>



  <br /><br />

  <script type="text/javascript" src="//code.jquery.com/jquery-1.11.0.min.js"></script>
  <script type="text/javascript" src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>

  <script>

    document.addEventListener('DOMContentLoaded', function () {
      var main = new Splide('#main-carousel', {
        type: 'fade',
        rewind: true,
        pagination: false,
        arrows: false,
      });

      var thumbnails = new Splide('#thumbnail-carousel', {
        arrows: false,
        gap: 5,
        rewind: true,
        isNavigation: true,
        perPage: 5,
        breakpoints: {
          600: {

            perPage: 3, // Display 3 thumbnails per page on smaller screens
          },
        },
      });

      main.sync(thumbnails).mount();
      thumbnails.mount();
    });
    document.addEventListener('DOMContentLoaded', function () {
      new Splide('.run', {
        type: 'loop',
        drag: 'free',
        focus: 'center',
        perPage: 6,
        autoScroll: {
          speed: 1,
        },

        focus: "center",
      }).mount(window.splide.Extensions);
    });
    document.addEventListener('DOMContentLoaded', function () {
      const splide = new Splide('#relatedSlider', {
        type: "loop",
        pagination: false,

        perPage: 4,
        gap: "15px",
        breakpoints: {
          1100: {
            perPage: 5
          },
          992: {
            perPage: 4
          },
          768: {
            perPage: 3
          },
          552: {
            perPage: 2
          }
        }
      });
      splide.mount();
    });

    $('#Buynow').on('click', function () {
      console.log("Buynow clicked")

      $("#AddToCart").click();

      setTimeout(function () {

        window.location = "/cart";

      }, 800)

    })
    function openCity(evt, cityName) {
      var i, tabcontent, tablinks;
      tabcontent = document.getElementsByClassName("tabcontent");
      for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
      }
      tablinks = document.getElementsByClassName("tablinks");
      for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
      }
      document.getElementById(cityName).style.display = "block";
      evt.currentTarget.className += " active";
    }
  </script>





  <script>



    window.addEventListener("DOMContentLoaded", () => {
      const productJson = {{ product | json
    }};
    console.log(productJson);


    const sizeVariantRadios = document.querySelectorAll(".size-option input[type='radio']");

    sizeVariantRadios.forEach(radio => {
      radio.addEventListener("change", () => {

        // Find Selected Option
        let selectedOptions = [];

        document.querySelectorAll(".size-option input[type='radio']:checked").forEach(radio => {
          selectedOptions.push(radio.value);
        });

        console.log(selectedOptions);

        // Finding the matched variant

        const mathcedVariant = productJson.variants.find(variant => {
          let pass = true;

          for (let i = 0; i < selectedOptions.length; i++) {
            if (selectedOptions.indexOf(variant.options[i]) === -1) {
              pass = false;
              break;
            }
          }

          return pass;
        }); // End of const mathcedVariant

        console.log(mathcedVariant);

        // Change product form variant id
        document.querySelector("#product-id").value = mathcedVariant.id;

        // Change url
        const url = new URLParse(window.location.href, true);
        url.query.variant = mathcedVariant.id;
        window.history.replaceState(null, null, url.toString());

        // Change prices
        function formatMoney(cents, format) {
          if (typeof cents == 'string') {
            cents = cents.replace('.', '');
          }
          var value = '';
          var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
          var formatString = (format || this.money_format);

          function defaultOption(opt, def) {
            return (
              typeof opt == 'undefined'
                ? def
                : opt
            );
          }

          function formatWithDelimiters(number, precision, thousands, decimal) {
            precision = defaultOption(precision, 2);
            thousands = defaultOption(thousands, ',');
            decimal = defaultOption(decimal, '.');

            if (isNaN(number) || number == null) {
              return 0;
            }

            number = (number / 100.0).toFixed(precision);

            var parts = number.split('.'),
              dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
              cents = parts[1]
                ? (decimal + parts[1])
                : '';

            return dollars + cents;
          }

          switch (formatString.match(placeholderRegex)[1]) {
            case 'amount': value = formatWithDelimiters(cents, 2);
              break;
            case 'amount_no_decimals': value = formatWithDelimiters(cents, 0);
              break;
            case 'amount_with_comma_separator': value = formatWithDelimiters(cents, 2, '.', ',');
              break;
            case 'amount_no_decimals_with_comma_separator': value = formatWithDelimiters(cents, 0, '.', ',');
              break;
          }

          return formatString.replace(placeholderRegex, value);
        };

        document.querySelector(".product_price").textContent = formatMoney(mathcedVariant.price, "{{ shop.money_format }}");
        document.querySelector(".product_compare_price").textContent = formatMoney(mathcedVariant.compare_at_price, "{{ shop.money_format }}");

        if (mathcedVariant.compare_at_price !== mathcedVariant.price) {
          document.querySelector(".product_compare_price").classList.remove("hidden");
        } else {
          document.querySelector(".product_compare_price").classList.add("hidden");
        }

        // Change add to cart
        const addToCart = document.getElementById("add-to-cart");
        if (mathcedVariant.available) {
          addToCart.textContent = "add to cart";
          addToCart.disabled = false;
        } else {
          addToCart.textContent = "Out of stock"
          addToCart.disabled = true;
        }
      }) // End of radio.addEventListener


    }); // sizeVariantRadios.forEach


    const colorVariantRadios = document.querySelectorAll(".color-options input[type='radio']");
    console.log("Color variants...", colorVariantRadios);


    colorVariantRadios.forEach(radio => {
      radio.addEventListener("change", () => {

        // Find Selected Option
        let selectedOptions = [];

        document.querySelectorAll(".color-options input[type='radio']:checked").forEach(radio => {
          selectedOptions.push(radio.value);
        });

        console.log(selectedOptions);

        // Finding the matched variant

        const mathcedVariant = productJson.variants.find(variant => {
          let pass = true;

          for (let i = 0; i < selectedOptions.length; i++) {
            if (selectedOptions.indexOf(variant.options[i + 1]) === -1) {
              pass = false;
              break;
            }
          }

          return pass;
        }); // End of const mathcedVariant

        console.log(mathcedVariant);

        // Change product form variant id
        document.querySelector("#product-id").value = mathcedVariant.id;

        // Change url
        const url = new URLParse(window.location.href, true);
        url.query.variant = mathcedVariant.id;
        window.history.replaceState(null, null, url.toString());

        // Change prices
        function formatMoney(cents, format) {
          if (typeof cents == 'string') {
            cents = cents.replace('.', '');
          }
          var value = '';
          var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
          var formatString = (format || this.money_format);

          function defaultOption(opt, def) {
            return (
              typeof opt == 'undefined'
                ? def
                : opt
            );
          }

          function formatWithDelimiters(number, precision, thousands, decimal) {
            precision = defaultOption(precision, 2);
            thousands = defaultOption(thousands, ',');
            decimal = defaultOption(decimal, '.');

            if (isNaN(number) || number == null) {
              return 0;
            }

            number = (number / 100.0).toFixed(precision);

            var parts = number.split('.'),
              dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
              cents = parts[1]
                ? (decimal + parts[1])
                : '';

            return dollars + cents;
          }

          switch (formatString.match(placeholderRegex)[1]) {
            case 'amount': value = formatWithDelimiters(cents, 2);
              break;
            case 'amount_no_decimals': value = formatWithDelimiters(cents, 0);
              break;
            case 'amount_with_comma_separator': value = formatWithDelimiters(cents, 2, '.', ',');
              break;
            case 'amount_no_decimals_with_comma_separator': value = formatWithDelimiters(cents, 0, '.', ',');
              break;
          }

          return formatString.replace(placeholderRegex, value);
        };

        document.querySelector(".product_price").textContent = formatMoney(mathcedVariant.price, "{{ shop.money_format }}");
        document.querySelector(".product_compare_price").textContent = formatMoney(mathcedVariant.compare_at_price, "{{ shop.money_format }}");

        if (mathcedVariant.compare_at_price !== mathcedVariant.price) {
          document.querySelector(".product_compare_price").classList.remove("hidden");
        } else {
          document.querySelector(".product_compare_price").classList.add("hidden");
        }

        // Change add to cart
        const addToCart = document.getElementById("add-to-cart");
        if (mathcedVariant.available) {
          addToCart.textContent = "add to cart";
          addToCart.disabled = false;
        } else {
          addToCart.textContent = "Out of stock"
          addToCart.disabled = true;
        }
      });
    });
  });
  </script>
  <script src="https://code.jquery.com/jquery-3.6.4.slim.min.js"
    integrity="sha256-a2yjHM4jnF9f54xUQakjZGaqYs/V1CYvWpoqZzC2/Bw=" crossorigin="anonymous"></script>
  <script>
    /* When the user clicks on the button, 
    toggle between hiding and showing the dropdown content */
    function myFunction() {
      console.log("h1");
      document.getElementById("myDropdown").classList.toggle("show");
      console.log("h");
    }


    window.onclick = function (event) {

      if (!event.target.matches('.dropbtn')) {

        var dropdowns = document.getElementsByClassName("dropdown-content");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }



  </script>
</div>
</div>