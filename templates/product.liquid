<link rel="stylesheet" href="url-to-cdn/splide.min.css">


{{ 'https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.3/dist/css/splide.min.css' | stylesheet_tag }}
{{ 'https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.3/dist/js/splide.min.js' | script_tag }}

{% style %}
.blockquote {
border: none;
}
.show {display: block;}
.product-title {
font-size: 22px;
text-transform: uppercase;
}
.total-price {
font-size: 18px !important;
}

.slick-slide {
height: auto !important;
}

.listItemHeight {
height: 196px;
}

.product-detial .slider .slick-slider li {
width: 25% !important;
}
@media (max-width: 768px) {
.grid {
display:grid !important;
text-iteam:center;
}
.dataprice{
width:100% !important;
display: flex;
justify-content: center;

}
}
.slider-sec .slick-track {
left: auto !important;
}

.size-option label {
font-weight: 500;
cursor: pointer;
}

.size-option input:checked + label {
color: #c99035;
font-size: 20px;
}
.product_thumbnails1 .splide__arrows{
top:20px;
margin:auto;
right: 0px;
width:100%;
}
.thum1 img{
cursor:pointer;
}
.product-image img{
cursor:pointer;
}
.hidden {
display: none;
}

.line-through {
text-decoration-line: line-through;
}
.splide__list .is-active{
height:auto !important;
}
.clrs-options input + label {
border: 1px solid #c99035;
color: #c99035;
cursor: pointer !important;
}

.clrs-options input:checked + label {
border-color: #c99035;
color: white;
background-color: #c99035;
}
{% endstyle %}

{% assign sectionId = section.id %}

{% for collection in product.collections %}
{%- assign strings = collection.url | split: '/' -%}
{% if forloop.index == 1 %}
{% for word in strings %}
{% if forloop.index == 3 %}
{% assign currentProductCollection = word %}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}
<div class="contanier px-5 " style="margin-top:5%;">
  <div class="product_section row " style="display:flex;margin-top:30px;">
    <div class="product_imgs col-md-7 row" style="    justify-content: space-around;    ">
      <div class=" col-md-2 product_thumbnails product_thumbnails1 min-w-[100px] max-h-[610px]"
        style="margin-top:20px;max-height: 513px;overflow-y: scroll;">
        <div class="" id="thumbnail-slider" role="group" aria-label=" Basic HTML Example">
          <div class="thum1">
            {% for image in product.images %}
            <img src="{{ image.src | img_url: '600x600' }}" alt="{{ image.alt | escape }}"
              class="object-contain max-w-full h-auto" style="width:100% !important;padding-bottom: 10px;">

            {% endfor %}

          </div>
        </div>
      </div>

      <div class="product-image h-[610px] flex-1 overflow-y-hidden col-md-10" style="max-width:600px;">
        <div class="" id="main-slider" role="group" aria-label=" Basic HTML Example">
          <div class="">
            <div class="" style="height:500px;">
              <img id="main-cover" src="{{ product.images[0] | img_url: '600x600' }}" alt="{{ image.alt | escape }}"
                class="object-contain max-w-full h-auto mainImage" style="height:auto;">
            </div>



          </div>
        </div>
      </div>
    </div>
    <div class="dataprice col-md-5">
      <div class="product_info " style="min-width:270px;">
        <div class="flex flex-col gap-y-3">
          <div class="product-title">
            <h1 class="text-[30px] font-Mukta font-semibold">{{ product.title }}</h1>
            <span id="" class="rc">
              <a href="#reviews">
                <div
                  style="padding:0px 5px 0px;color: #FFFFFF;  display:inline-block;font-size: 12px;background-color:#c37960">
                  <span class="productRatingEvnt" style="vertical-align: middle;">4.7</span>
                  <span style="vertical-align: middle;">★</span>
                </div>
                <span style="color: #878787; font-size:13px;">Rating &amp; 3 Reviews</span>
              </a></span>
          </div>
          <hr>
          <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm">
            <div class="product-prices flex flex-row items-center gap-x-4 mt-3">
              <span class="product_price  font-Mukta text-[23px] font-bold"
                style="font-size: 18px;opacity: 1;position: relative;">{{
                product.selected_or_first_available_variant.price | money }}</span>
              <span
                class="product_compare_price   text-gray-500 font-Mukta line-through {% if product.selected_or_first_available_variant.price == product.selected_or_first_available_variant.compare_at_price %}hidden{% endif %}">{{
                product.selected_or_first_available_variant.compare_at_price | money }}</span>
              <span
                class="sale-tag {% if product.selected_or_first_available_variant.compare_at_price %}not-hidden{% else %}hidden{% endif %}">
                {% if product.selected_or_first_available_variant.compare_at_price %}
                <span class='relative text-white flex flex-row'>
                  <span class="sale_percent bg-primary py-[2px] px-[10px] text-[12px] ml-[-6px] font-Mukta"
                    style="padding:5px;">
                    {{ product.selected_or_first_available_variant.compare_at_price | minus:
                    product.selected_or_first_available_variant.price | times: 100 | divided_by:
                    product.selected_or_first_available_variant.compare_at_price }}%
                    OFF
                  </span>
                </span>
                {% endif %}
              </span>
            </div>
            {% if variant %}
            <select name="id" id="productSelect" class="mt-3"
              style="margin-top:10px;margin-bottom:10px;width: 50%;border: 2px solid;padding: 10px;border-radius: 10px;">
              {% for variant in product.variants %}
              {% if variant.available %}
              <option value="{{ variant.id }}">
                {{ variant.title }} - {{ variant.price | money_with_currency }}
              </option>
              {% else %}
              <option disabled="disabled">
                {{ variant.title }} - sold out
              </option>
              {% endif %}
              {% endfor %}
            </select>
          {% endif %}
            <div class="product-quantity flex flex-col gap-y-1 mb-1" style="margin-top:20px;margin-bottom:20px;">
              <label for="Quantity" class="font-Mukta text-[#5b5b5b] font-bold">Quantity</label>
              <div class="quantity-wrapper inline-block relativ overflow-visible bg-white text-black"
                style="padding-top: 10px;">
                <input type="number" id="Quantity" name="quantity" value="1" min="1"
                  style="    border: 1px solid;border-radius: 10px;text-align: center;    padding: 5px;    width: 90px;">
              </div>
            </div>
            <div class="addToCart-btn d-flex items-start gap-x-3 mt-3">
              <div class="add-cart flex-1 flex flex-col gap-y-2">
                <button type="submit" id="AddToCart" name="add"
                  class="border w-full  py-3 rounded-[4px] bg-primary hover:bg-primary/80 transition-all text-white tracking-[3px] font-semibold uppercase font-Mukta"
                  style="width:50%;border-radius: 30px;min-width:200px;">
                  Add to cart
                </button>
                <button type="submit" id="AddToCart" name="add"
                  class="border w-full  py-3 rounded-[4px] bg-primary hover:bg-primary/80 transition-all text-white tracking-[3px] font-semibold uppercase font-Mukta"
                  style="width:50%;border-radius: 30px;min-width:200px;">
                  Buy Now
                </button>
              </div>
            </div>
        </div>
        </form>
        
        <div class="product-ratings"></div>
        <div class="info_container mt-10">
          <div class="product-description " style="margin-top:20px;">
            <div class="description-wrapper">
              <h1 style="border-bottom: 2px solid gainsboro;"
                class="  descBtn flex items-center p-[15px] text-[14px] tracking-widest uppercase w-full">
                <span class="text-[30px] font-Mukta font-semibold">Product Description:</span>

              </h1>
              <div id="myDropdown" class=" product-desc px-6 py-4 ">
                <p class="font-Mukta">{{ product.description }}</p>
              </div>
            </div>
          </div>

        </div>
        <div class="row" style="margin:20 auto;padding-left:4px;">
          <div class="col-md-3 " style="padding:0;justify-content: center;display: flex;align-items: center;">
            <input type="hidden" id="totalRevwCunt" value="3">
            <div class="left" style="margin-top:12%;">
              <div class="94">
                <div style="font-size:36px;font-weight: 600; align-content: center;color: #4D4D4D;">4.7<strong
                    class="left-rating-star" style="color: #c37960;font-size: 31px">★</strong></div>
              </div>
              <div style="margin-top:-6px;font-size: 13px;line-height:18px;">Rating &amp; 3 reviews</div>
            </div>
          </div>
          <div class="left col-md-9 " style="padding:0">
            <div class=" rating-review-on-cat" style="padding-left:3%;">
              <div class="clearfix"></div>
              <div class="rationg d-flex mt-4">
                <span class="left" style="color:#666666;font-size: 13px">5 <strong>★</strong></span>
                <span class="progress left" style="width:55%; margin-left: 10px; margin-bottom: 0;border-radius: 10px;">
                  <div class="determinate" style="background-color:#c37960!important; width: 66.66666666666667%"></div>
                </span>
                <span class="left" style="font-size: 13px;color:#707070;margin-left:10px;">2</span>
              </div>
              <div class="clearfix"></div>
              <div class="d-flex mt-2">
                <span class="left" style="color:#666666;;font-size: 13px">4 <strong>★</strong></span>
                <span class="progress left" style="width:55%; margin-left: 10px; margin-bottom: 0;border-radius: 10px;">
                  <div class="determinate" style=" background-color:#c37960!important;width: 33.333333333333336%"></div>
                </span>
                <span class="left" style="font-size: 13px;color:#707070;margin-left:10px;">1</span>
              </div>
              <div class="clearfix"></div>
              <div class="d-flex mt-2">
                <span class="left" style="color:#666666;font-size: 13px">3 <strong>★</strong></span>
                <span class="progress left" style="width:55%; margin-left: 10px; margin-bottom: 0;border-radius: 10px;">
                  <div class="determinate" style="background-color:#c37960!important;width: 0.0%"></div>
                </span>
                <span class="left" style="font-size: 13px;color:#707070;margin-left:10px;">0</span>
              </div>
              <div class="clearfix"></div>
              <div class="d-flex mt-2">
                <span class="left" style="color:#666666;font-size: 13px">2 <strong>★</strong></span>
                <span class="progress left" style="width:55%; margin-left: 10px; margin-bottom: 0;border-radius: 10px;">
                  <div class="determinate" style=" background-color: #ffa500!important;width: 0.0%"></div>
                </span>
                <span class="left" style="font-size: 13px;color:#707070;margin-left:10px;">0</span>
              </div>
              <div class="clearfix"></div>
              <div class="d-flex mt-2">
                <span class="left" style="color:#666666;font-size: 13px">1 <strong>★</strong></span>
                <span class="progress left" style="width:55%; margin-left: 10px; margin-bottom: 0;border-radius: 10px;">
                  <div class="determinate" style="background-color: #e95757!important; width: 0.0%"></div>
                </span>
                <span class="left" style="font-size: 13px;color:#707070;margin-left:10px;">0</span>
              </div>
              <div class="clearfix"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>


  <!-- slider-section of the page -->
  <br /><br />
  <div class="px-5">
    <div class="row">
      <div class="col-12 text-center">
        <div class="product-title">
          <h1 class="text-[30px] font-Mukta font-semibold">You May Also Like</h1>
        </div>
        </br></br>
      </div>
    </div>
  </div>



  <div class="px-5 relative">
    <div class="row pm1">
      <div class="col-12">
        <section class="splide" id="relatedSlider" aria-label="Splide Basic HTML Example">
          <div class="splide__track">
            <ul class="splide__list">
              {% paginate collections[currentProductCollection].products by 4 %}
              {% for product in collections[currentProductCollection].products %}
              <li class="splide__slide">
                {% render 'Bespoke-card', product: product %}
              </li>
              {% endfor %}
              {% endpaginate %}
            </ul>
          </div>
        </section>
      </div>
    </div>
  </div>

  <br /><br />


  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const splide = new Splide('#relatedSlider', {
        type: "loop",
        pagination: false,

        perPage: 4,
        gap: "15px",
        breakpoints: {
          1100: {
            perPage: 5
          },
          992: {
            perPage: 4
          },
          768: {
            perPage: 3
          },
          552: {
            perPage: 2
          }
        }
      });
      splide.mount();
    });
  </script>


  <script>
    new Drift(document.querySelector('.drift-demo-trigger'), {
      paneContainer: document.querySelector('.detial-holder'),
      inlinePane: 769,
      inlineOffsetY: -85,
      containInline: true,
      hoverBoundingBox: true
    });
  </script>


  <script>



    window.addEventListener("DOMContentLoaded", () => {
      const productJson = {{ product | json
    }};
    console.log(productJson);


    const sizeVariantRadios = document.querySelectorAll(".size-option input[type='radio']");

    sizeVariantRadios.forEach(radio => {
      radio.addEventListener("change", () => {

        // Find Selected Option
        let selectedOptions = [];

        document.querySelectorAll(".size-option input[type='radio']:checked").forEach(radio => {
          selectedOptions.push(radio.value);
        });

        console.log(selectedOptions);

        // Finding the matched variant

        const mathcedVariant = productJson.variants.find(variant => {
          let pass = true;

          for (let i = 0; i < selectedOptions.length; i++) {
            if (selectedOptions.indexOf(variant.options[i]) === -1) {
              pass = false;
              break;
            }
          }

          return pass;
        }); // End of const mathcedVariant

        console.log(mathcedVariant);

        // Change product form variant id
        document.querySelector("#product-id").value = mathcedVariant.id;

        // Change url
        const url = new URLParse(window.location.href, true);
        url.query.variant = mathcedVariant.id;
        window.history.replaceState(null, null, url.toString());

        // Change prices
        function formatMoney(cents, format) {
          if (typeof cents == 'string') {
            cents = cents.replace('.', '');
          }
          var value = '';
          var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
          var formatString = (format || this.money_format);

          function defaultOption(opt, def) {
            return (
              typeof opt == 'undefined'
                ? def
                : opt
            );
          }

          function formatWithDelimiters(number, precision, thousands, decimal) {
            precision = defaultOption(precision, 2);
            thousands = defaultOption(thousands, ',');
            decimal = defaultOption(decimal, '.');

            if (isNaN(number) || number == null) {
              return 0;
            }

            number = (number / 100.0).toFixed(precision);

            var parts = number.split('.'),
              dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
              cents = parts[1]
                ? (decimal + parts[1])
                : '';

            return dollars + cents;
          }

          switch (formatString.match(placeholderRegex)[1]) {
            case 'amount': value = formatWithDelimiters(cents, 2);
              break;
            case 'amount_no_decimals': value = formatWithDelimiters(cents, 0);
              break;
            case 'amount_with_comma_separator': value = formatWithDelimiters(cents, 2, '.', ',');
              break;
            case 'amount_no_decimals_with_comma_separator': value = formatWithDelimiters(cents, 0, '.', ',');
              break;
          }

          return formatString.replace(placeholderRegex, value);
        };

        document.querySelector(".product_price").textContent = formatMoney(mathcedVariant.price, "{{ shop.money_format }}");
        document.querySelector(".product_compare_price").textContent = formatMoney(mathcedVariant.compare_at_price, "{{ shop.money_format }}");

        if (mathcedVariant.compare_at_price !== mathcedVariant.price) {
          document.querySelector(".product_compare_price").classList.remove("hidden");
        } else {
          document.querySelector(".product_compare_price").classList.add("hidden");
        }

        // Change add to cart
        const addToCart = document.getElementById("add-to-cart");
        if (mathcedVariant.available) {
          addToCart.textContent = "add to cart";
          addToCart.disabled = false;
        } else {
          addToCart.textContent = "Out of stock"
          addToCart.disabled = true;
        }
      }) // End of radio.addEventListener


    }); // sizeVariantRadios.forEach


    const colorVariantRadios = document.querySelectorAll(".color-options input[type='radio']");
    console.log("Color variants...", colorVariantRadios);


    colorVariantRadios.forEach(radio => {
      radio.addEventListener("change", () => {

        // Find Selected Option
        let selectedOptions = [];

        document.querySelectorAll(".color-options input[type='radio']:checked").forEach(radio => {
          selectedOptions.push(radio.value);
        });

        console.log(selectedOptions);

        // Finding the matched variant

        const mathcedVariant = productJson.variants.find(variant => {
          let pass = true;

          for (let i = 0; i < selectedOptions.length; i++) {
            if (selectedOptions.indexOf(variant.options[i + 1]) === -1) {
              pass = false;
              break;
            }
          }

          return pass;
        }); // End of const mathcedVariant

        console.log(mathcedVariant);

        // Change product form variant id
        document.querySelector("#product-id").value = mathcedVariant.id;

        // Change url
        const url = new URLParse(window.location.href, true);
        url.query.variant = mathcedVariant.id;
        window.history.replaceState(null, null, url.toString());

        // Change prices
        function formatMoney(cents, format) {
          if (typeof cents == 'string') {
            cents = cents.replace('.', '');
          }
          var value = '';
          var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
          var formatString = (format || this.money_format);

          function defaultOption(opt, def) {
            return (
              typeof opt == 'undefined'
                ? def
                : opt
            );
          }

          function formatWithDelimiters(number, precision, thousands, decimal) {
            precision = defaultOption(precision, 2);
            thousands = defaultOption(thousands, ',');
            decimal = defaultOption(decimal, '.');

            if (isNaN(number) || number == null) {
              return 0;
            }

            number = (number / 100.0).toFixed(precision);

            var parts = number.split('.'),
              dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
              cents = parts[1]
                ? (decimal + parts[1])
                : '';

            return dollars + cents;
          }

          switch (formatString.match(placeholderRegex)[1]) {
            case 'amount': value = formatWithDelimiters(cents, 2);
              break;
            case 'amount_no_decimals': value = formatWithDelimiters(cents, 0);
              break;
            case 'amount_with_comma_separator': value = formatWithDelimiters(cents, 2, '.', ',');
              break;
            case 'amount_no_decimals_with_comma_separator': value = formatWithDelimiters(cents, 0, '.', ',');
              break;
          }

          return formatString.replace(placeholderRegex, value);
        };

        document.querySelector(".product_price").textContent = formatMoney(mathcedVariant.price, "{{ shop.money_format }}");
        document.querySelector(".product_compare_price").textContent = formatMoney(mathcedVariant.compare_at_price, "{{ shop.money_format }}");

        if (mathcedVariant.compare_at_price !== mathcedVariant.price) {
          document.querySelector(".product_compare_price").classList.remove("hidden");
        } else {
          document.querySelector(".product_compare_price").classList.add("hidden");
        }

        // Change add to cart
        const addToCart = document.getElementById("add-to-cart");
        if (mathcedVariant.available) {
          addToCart.textContent = "add to cart";
          addToCart.disabled = false;
        } else {
          addToCart.textContent = "Out of stock"
          addToCart.disabled = true;
        }
      });
    });
  });
  </script>
  <script src="https://code.jquery.com/jquery-3.6.4.slim.min.js"
    integrity="sha256-a2yjHM4jnF9f54xUQakjZGaqYs/V1CYvWpoqZzC2/Bw=" crossorigin="anonymous"></script>
  <script>
    /* When the user clicks on the button, 
    toggle between hiding and showing the dropdown content */
    function myFunction() {
      console.log("h1");
      document.getElementById("myDropdown").classList.toggle("show");
      console.log("h");
    }


    window.onclick = function (event) {

      if (!event.target.matches('.dropbtn')) {

        var dropdowns = document.getElementsByClassName("dropdown-content");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }


    // src update
    $(document).ready(function () {
      $(".thum1 img").click(function () {

        $("#main-cover").attr("src", $(this).attr("src"));
        var src = $(this).attr("src");
        console.log(src);
      });
      $(".thum1 img").click(function () {
        $("#main-cover").attr("src", $(this).attr("src"));
      });
    });
  </script>
</div>
</div>